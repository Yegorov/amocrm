# Amocrm –¥–ª—è Rails

## –£—Å—Ç–∞–Ω–æ–≤–∫–∞

–¥–æ–±–∞–≤—å—Ç–µ –≤ Gemfile:

    gem 'amocrm-rails'

–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ `bundle install`.

–ó–∞—Ç–µ–º: `rails g amocrm_rails:install`

–í —Ñ–∞–π–ª `config/amocrm.yml` –≤—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ.

–í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω—è—Ç—å `timeout`, `open_timeout`, `faraday_adapter`, `proxy`, `symbolize_keys`, `logger`, –∏ `debug`:

```ruby
AmocrmRals::Request.timeout = 15
AmocrmRals::Request.open_timeout = 15
AmocrmRals::Request.symbolize_keys = true
AmocrmRals::Request.debug = false
```
–≤ —Ñ–∞–π–ª–µ `config/initializers/amocrm.rb`

## –°–ø–∏—Å–∫–∏

### –î–æ–±–∞–≤–ª–µ–Ω–∏–µ, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–æ–≤
#### –î–æ–±–∞–≤–ª–µ–Ω–∏–µ
```ruby
items = [
  {
    name: "–¢–æ–≤–∞—Ä—ã"
  }
]
body = {
  add: items
}
response = AmocrmRails::Request.catalogs.create(body: body)
items.map!.with_index { |item, index| item.merge(response.body[:_embedded][:items][index]) }
```
#### –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ
```
items.each do |item| 
  item[:name].insert(-1, ' updated')
  item.delete(:_links)
end

body = {
   update: items
}
response = AmocrmRails::Request.catalogs.create(body: body)
item_ids = response.body[:_embedded][:items].map{ |item| item[:id] }
```

#### –£–¥–∞–ª–µ–Ω–∏–µ
```
ü§¶ü§¶ü§¶
body = "{\"delete\": [{#{item_ids.join(',')}]}"
AmocrmRails::Request.catalogs.create(body: body)
```

### –ü–µ—Ä–µ—á–µ–Ω—å —Å–ø–∏—Å–∫–æ–≤
```ruby
response = AmocrmRails::Request.catalogs.retrieve
p(response.body)
item_ids = response.body[:_embedded][:items].map{|item| item[:id]}
```

## –ú–µ—Ç–æ–¥—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞

### –î–æ–±–∞–≤–ª–µ–Ω–∏–µ, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞

#### –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
```ruby
body = {
   add: [
      {
         catalog_id: item_ids.first,
         name: "–ö–∞—Ä–∞–Ω–¥–∞—à"
      }
   ]
}
response = AmocrmRails::Request.catalog_elements.create(body: body)
p(response.body)
catalog_element_ids = response.body[:_embedded][:items].map{|item| item[:id]}
```

#### –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
```ruby
body = {
  update: [
      {
         catalog_id: item_ids.first,
         id: catalog_element_ids.first,
         name: "–†—É—á–∫–∞"
      }
   ]
}
response = AmocrmRails::Request.catalog_elements.create(body: body)
p(response.body)
```

#### –£–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤

```ruby
body = {
  delete: [catalog_element_ids.first]
}
response = AmocrmRails::Request.catalog_elements.create(body: body)
p(response.body)
```

### –ü–µ—Ä–µ—á–µ–Ω—å —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞

```ruby
params = {
  catalog_id: item_ids.first
}
response = AmocrmRails::Request.catalog_elements.retrieve(params: params)
p(response.body)
items = response.body[:_embedded][:items]
```

## –¢–æ–≤–∞—Ä—ã

### –í–∫–ª—é—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞

```ruby
body = {
  enabled: true
}
response = AmocrmRails::Request.products_settings.create(body: body)
p(response.body)
catalog_product_id = response.body[:catalog_id]
```

### –°—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞

```ruby
response = AmocrmRails::Request.products_settings.retrieve
p(response.body)
```